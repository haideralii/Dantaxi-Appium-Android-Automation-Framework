<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="TEO-Haider1" failures="0" tests="5" name="Surefire test" time="101.653" errors="0" timestamp="2020-12-01T19:34:22 PKT">
  <testcase classname="Tests.BaseTests" name="@BeforeMethod setUp" time="13.14">
    <failure type="org.openqa.selenium.WebDriverException" message="Connection refused: no further information
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;TEO-HAIDER1&amp;apos;, ip: &amp;apos;10.0.75.1&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;13.0.1&amp;apos;
Driver info: driver.version: EnhancedAndroidDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Connection refused: no further information
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'TEO-HAIDER1', ip: '10.0.75.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: driver.version: EnhancedAndroidDriver
at io.appium.java_client.remote.AppiumCommandExecutor.lambda$5(AppiumCommandExecutor.java:251)
at java.base/java.util.Optional.orElseGet(Optional.java:362)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:336)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:37)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:88)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:98)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:94)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.<init>(EnhancedAndroidDriver.java:17)
at com.microsoft.appcenter.appium.LocalProvider.createAndroidDriver(LocalProvider.java:20)
at com.microsoft.appcenter.appium.Factory.createAndroidDriver(Factory.java:51)
at Tests.BaseTests.setUp(BaseTests.java:88)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
Caused by: java.net.ConnectException: Connection refused: no further information
at java.base/sun.nio.ch.Net.pollConnect(Native Method)
at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:579)
at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:339)
at java.base/java.net.Socket.connect(Socket.java:603)
at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105)
at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
... 52 more
... Removed 40 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Tests.BaseTests" name="@AfterMethod recordFailure" time="-1.606833173657E9">
    <skipped/>
  </testcase> <!-- @AfterMethod recordFailure -->
  <testcase classname="Tests.BaseTests" name="@BeforeMethod setUp" time="-1.606833173659E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Tests.BaseTests" name="@AfterMethod recordFailure" time="-1.60683317366E9">
    <skipped/>
  </testcase> <!-- @AfterMethod recordFailure -->
  <testcase classname="Tests.BaseTests" name="@AfterMethod recordFailure" time="1.15">
    <failure type="java.lang.RuntimeException" message="Unable to get test information. Make sure the test class includes a @Rule:
  @Rule
  public TestWatcher watcher = Factory.createWatcher();">
      <![CDATA[java.lang.RuntimeException: Unable to get test information. Make sure the test class includes a @Rule:
  @Rule
  public TestWatcher watcher = Factory.createWatcher();
at com.microsoft.appcenter.appium.EventReporter.getRun(EventReporter.java:47)
at com.microsoft.appcenter.appium.EventReporter.reportLabel(EventReporter.java:60)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.lambda$label$1(EnhancedAndroidDriver.java:74)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.access$lambda$1(EnhancedAndroidDriver.java)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver$$Lambda$4.accept(Unknown Source)
at com.microsoft.appcenter.appium.DriverHelper.getScreenshotToWorkspace(DriverHelper.java:21)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.label(EnhancedAndroidDriver.java:73)
at Tests.BaseTests.recordFailure(BaseTests.java:130)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod recordFailure -->
  <testcase classname="Tests.BaseTests" name="@AfterMethod recordFailure" time="4.335">
    <failure type="java.lang.RuntimeException" message="Unable to get test information. Make sure the test class includes a @Rule:
  @Rule
  public TestWatcher watcher = Factory.createWatcher();">
      <![CDATA[java.lang.RuntimeException: Unable to get test information. Make sure the test class includes a @Rule:
  @Rule
  public TestWatcher watcher = Factory.createWatcher();
at com.microsoft.appcenter.appium.EventReporter.getRun(EventReporter.java:47)
at com.microsoft.appcenter.appium.EventReporter.reportLabel(EventReporter.java:60)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.lambda$label$1(EnhancedAndroidDriver.java:74)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.access$lambda$1(EnhancedAndroidDriver.java)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver$$Lambda$4.accept(Unknown Source)
at com.microsoft.appcenter.appium.DriverHelper.getScreenshotToWorkspace(DriverHelper.java:21)
at com.microsoft.appcenter.appium.EnhancedAndroidDriver.label(EnhancedAndroidDriver.java:73)
at Tests.BaseTests.recordFailure(BaseTests.java:130)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod recordFailure -->
  <testcase classname="Tests.BaseTests" name="@BeforeMethod setUp" time="-1.606833262042E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="Tests.BaseTests" name="@AfterMethod recordFailure" time="-1.606833262044E9">
    <skipped/>
  </testcase> <!-- @AfterMethod recordFailure -->
  <testcase classname="Tests.HomeMapScreenTests" name="VerifyDenySystemLocationAccessTest" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyDenySystemLocationAccessTest -->
  <testcase classname="Tests.HomeMapScreenTests" name="VerifyFullScreenCloseTest" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyFullScreenCloseTest -->
  <testcase classname="Tests.LoginTests" name="LoginWithNormalUser" time="16.557"/>
  <testcase classname="Tests.WelcomeScreenTests" name="VerifyGetStartedBtnTest" time="1.951"/>
  <testcase classname="Tests.WelcomeScreenTests" name="VerifyLoginAsAnonymousUserBtnTest" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyLoginAsAnonymousUserBtnTest -->
  <testcase classname="Tests.BaseTests" name="@BeforeTest killAllNodes" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest killAllNodes -->
  <testcase classname="Tests.BaseTests" name="@BeforeTest killAllNodes" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest killAllNodes -->
  <testcase classname="Tests.BaseTests" name="@BeforeTest killAllNodes" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest killAllNodes -->
</testsuite> <!-- Surefire test -->
